worker_processes auto;
pid /tmp/nginx.pid;
daemon off;

events {
  worker_connections 1024;
  use epoll;
}

http {

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log off;
  error_log /tmp/ngx_error.log error;

  sendfile on;
  keepalive_timeout 15;
  keepalive_disable msie6;
  keepalive_requests 100;
  tcp_nopush on;
  tcp_nodelay on;
  server_tokens off;

  fastcgi_temp_path /tmp/fastcgi 1 2;
  client_body_temp_path /tmp/client_body 1 2;
  proxy_temp_path /tmp/proxy 1 2;
  uwsgi_temp_path /tmp/uwsgi 1 2;
  scgi_temp_path /tmp/scgi 1 2;

  #server {
  #    listen 8880;
  #    server_name champo.ptyx.de
  #
  #    location / {
  #      return 301 https://$host$request_uri;
  #    }  
  #
  #    location /.well-known/acme-challenge/ {
  #      root /var/www/certbot;
  #    }
  #} (written when I was considering generating certificates with docker image)

  #server {
  #  listen 80;
  #  }


  server {
    listen 8888 ssl;
    server_name ub2.ptyx.de;
    charset utf-8;
    ssl_certificate /etc/letsencrypt/live/ub2.ptyx.de/cert.pem;
    ssl_certificate_key /etc/letsencrypt/live/ub2.ptyx.de/privkey.pem;

    root /flarum/app/public/ub2; 
    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
    }
  }

  server {
    #listen 8888;
    listen 8888 ssl;
    server_name champo.ptyx.de;
    #ssl_certificate /etc/nginx/certificates/cert.pem;
    #ssl_certificate_key /etc/nginx/certificates/privkey.pem;
    ssl_certificate /etc/letsencrypt/live/champo.ptyx.de/cert.pem;
    ssl_certificate_key /etc/letsencrypt/live/champo.ptyx.de/privkey.pem;
    ##ssl_certificate /etc/letsencrypt/live/champo.ptyx.de/fullchain.pem;
    ##ssl_certificate_key /etc/letsencrypt/live/champo.ptyx.de/privkey.pem;
    charset utf-8;


    root /flarum/app/public;
    index index.php;

    client_max_body_size 50M;
    fastcgi_buffers 64 4K;

    include /flarum/app/.nginx.conf;

    # PHP Backend
    # --------------------------------------
    location ~* \.php$ {
      try_files $uri =404;
      include fastcgi_params;
      fastcgi_split_path_info ^(.+\.php)(/.*)$;
      fastcgi_index index.php;
      fastcgi_pass unix:/run/php/php8-fpm.sock;
      fastcgi_intercept_errors on;
      fastcgi_request_buffering off;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param PATH_INFO $fastcgi_path_info;
      fastcgi_param HTTP_PROXY "";
      fastcgi_param REMOTE_ADDR $http_x_real_ip;
    }

    #include /etc/nginx/flarum/custom-vhost-flarum.conf;
  }

}
